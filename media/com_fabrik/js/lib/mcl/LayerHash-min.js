/*! Fabrik */
var LayerHash=new Class({Implements:[Events,Options],options:{onAdd:function(){},onRemove:function(){},onSwap:function(){},onPromote:function(){},onDemote:function(){},onDraw:function(){}},tables:{pos:[],id:{}},length:0,layers:[],initialize:function(t){return this.setOptions(t),this},add:function(t){var s=this.layers.length;return this.addAt(t,s)},addAt:function(t,s){if(t=t.options?t:new Layer(t),"number"==typeOf(this.tables.id[t.options.id]))throw new Error("LayerHash.addAt: Layer-ID can only be used once: ``"+t.options.id+"´´");t=this.layers.splice(s,this.layers.length-s,t);return this.layers=this.layers.concat(t),this.rebuildTables(),this.fireEvent("add"),this.getAt(s)},rebuildTables:function(){this.tables={pos:[],id:{}};for(var t,s=0;t=this.layers[s];s++)id=t.options.id,this.tables.pos.push(id),this.tables.id[id]=s;this.length=this.layers.length},addAfter:function(t,s){return this.addAt(t,this.tables.id[s]+1)},addBefore:function(t,s){return this.addAt(t,this.tables.id[s])},replace:function(t,s){var e=this.tables.id[s];return this.remove(s),this.addAt(t,e)},removeAt:function(t){return this.remove(this.tables.pos[t]),this},remove:function(t){return this.layers.splice(this.tables.id[t],1),this.rebuildTables(),this.fireEvent("remove"),this},promote:function(t){var t=this.tables.id[t],s=t+1;return this.fireEvent("promote"),this.swapByPos(t,s)},demote:function(t){var t=this.tables.id[t],s=t-1;return this.fireEvent("demote"),this.swapByPos(t,s)},swapByPos:function(t,s){var e=this.layers[s],i=this.layers[t];return!(!e||!i)&&(this.layers[t]=e,this.layers[s]=i,this.rebuildTables(),i)},swap:function(t,s){return this.swapByPos(this.tables.id[t],this.tables.id[s]),this.fireEvent("swap"),this.get(t)},getByPos:function(t){return this.layers[t]},getAt:function(t){return this.getByPos(t)},get:function(t){return this.layers[this.tables.id[t]]},draw:function(t){if(t)this.drawLayer(t);else for(var s,e=0;s=this.layers[e];e++)this.drawLayer(s);return this.fireEvent("draw"),this},drawLayer:function(t){t.options.visible&&t.draw()},getOrder:function(){return this.tables.pos},setOrder:function(t){for(var s,e=[],i=0;s=t[i];i++)e.push(this.layers[this.tables.id[s]]);return this.layers=e,this.rebuildTables(),this}});
//# sourceMappingURL=LayerHash-min.js.map